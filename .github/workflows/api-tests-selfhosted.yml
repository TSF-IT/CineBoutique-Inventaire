name: API Integration Tests (self-hosted)
on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']
  workflow_dispatch:

jobs:
  tests:
    runs-on: [self-hosted, tsf]
    timeout-minutes: 40
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: inv_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10
    env:
      TEST_DB_CONNECTION: Host=localhost;Port=5432;Database=inv_test;Username=postgres;Password=postgres
      DOTNET_INSTALL_DIR: ${{ runner.temp }}/.dotnet
      DOTNET_ROOT: ${{ runner.temp }}/.dotnet
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET 8 (user-scoped)
        uses: actions/setup-dotnet@v4
        env:
          DOTNET_INSTALL_DIR: ${{ env.DOTNET_INSTALL_DIR }}
        with:
          dotnet-version: '8.0.x'
          cache: true

      - name: Verify test project exists
        run: |
          ls -la
          ls -la tests || true
          ls -la tests/inventory.api.tests || true
          test -f tests/inventory.api.tests/CineBoutique.Inventory.Api.Tests.csproj

      - name: Build
        run: dotnet build -c Release

      - name: Wait for Postgres
        shell: bash
        run: |
          for i in {1..30}; do
            pg_isready -h 127.0.0.1 -p 5432 -U postgres && exit 0
            echo "Waiting for Postgres... ($i/30)"; sleep 2
          done
          echo "Postgres not ready"; exit 1

      - name: Test (all)
        run: dotnet test tests/inventory.api.tests/CineBoutique.Inventory.Api.Tests.csproj -c Release --logger "trx;LogFileName=test_results.trx"

      - name: Publish TRX
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-trx
          path: tests/inventory.api.tests/TestResults

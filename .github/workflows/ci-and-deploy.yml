name: CI & Deploy (to deploy branch)

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: write
  packages: read

jobs:
  backend:
    runs-on: [self-hosted, Linux, X64, tsf, docker]
    steps:
      - uses: actions/checkout@v4

      - name: Install .NET 8 locally (no sudo)
        shell: bash
        env:
          DOTNET_DIR: ${{ github.workspace }}/.dotnet
        run: |
          set -eux
          mkdir -p "$DOTNET_DIR"
          curl -sSL https://dot.net/v1/dotnet-install.sh -o dotnet-install.sh
          bash dotnet-install.sh --channel 8.0 --install-dir "$DOTNET_DIR"
          echo "DOTNET_ROOT=$DOTNET_DIR" >> "$GITHUB_ENV"
          echo "$DOTNET_DIR" >> "$GITHUB_PATH"
          export DOTNET_ROOT="$DOTNET_DIR"
          export PATH="$DOTNET_DIR:$PATH"
          "$DOTNET_DIR/dotnet" --info

      - name: Restore
        env:
          PATH: ${{ github.workspace }}/.dotnet:${{ env.PATH }}
        run: dotnet restore CineBoutique.Inventory.sln

      - name: Build
        env:
          PATH: ${{ github.workspace }}/.dotnet:${{ env.PATH }}
        run: dotnet build CineBoutique.Inventory.sln -c Release --no-restore

      - name: Test Domain
        working-directory: tests/inventory.domain.tests
        env:
          PATH: ${{ github.workspace }}/.dotnet:${{ env.PATH }}
        run: dotnet test -c Release --no-build --logger "trx;LogFileName=domain.trx"

      - name: Test API
        working-directory: tests/inventory.api.tests
        env:
          PATH: ${{ github.workspace }}/.dotnet:${{ env.PATH }}
        run: dotnet test -c Release --no-build --logger "trx;LogFileName=api.trx"

  frontend:
    runs-on: [self-hosted, Linux, X64, tsf, docker]
    steps:
      - uses: actions/checkout@v4

      - name: Run web build + tests inside Playwright container
        working-directory: src/inventory-web
        run: |
          docker run --rm \
            -v "$PWD":/work \
            -w /work \
            mcr.microsoft.com/playwright:v1.47.0-jammy \
            bash -lc '
              set -eux
              node -v
              npm -v
              npm ci
              npm run build
              npx playwright install
              npx playwright test
            '

      - name: Upload Playwright report (si pr√©sent)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: src/inventory-web/playwright-report
          if-no-files-found: ignore

  deploy:
    runs-on: [self-hosted, Linux, X64, tsf, docker]
    needs: [backend, frontend]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      - name: Force-update deploy branch to this commit
        run: |
          git push origin HEAD:refs/heads/deploy --force
          echo "Branch 'deploy' is now at $GITHUB_SHA"

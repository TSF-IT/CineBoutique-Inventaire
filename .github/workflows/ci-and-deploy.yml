name: CI & Deploy (to deploy branch)

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: write
  packages: read

jobs:
  backend:
    runs-on: [self-hosted, Linux, X64, tsf, docker]
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
      - name: Restore
        run: dotnet restore CineBoutique.Inventory.sln
      - name: Build
        run: dotnet build CineBoutique.Inventory.sln -c Release --no-restore
      - name: Test Domain
        working-directory: tests/inventory.domain.tests
        run: dotnet test -c Release --no-build --logger "trx;LogFileName=domain.trx"
      - name: Test API
        working-directory: tests/inventory.api.tests
        run: dotnet test -c Release --no-build --logger "trx;LogFileName=api.trx"

  frontend:
    runs-on: [self-hosted, Linux, X64, tsf, docker]
    steps:
      - uses: actions/checkout@v4

      # Si tu as réellement besoin de Playwright sur le runner, garde ces étapes.
      # ATTENTION: sur un self-hosted, l’install des deps système peut nécessiter sudo et casser.
      # Si ton runner n’est pas prêt pour Playwright, commente ces steps le temps d’installer proprement les deps.
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'src/inventory-web/package-lock.json'
      - name: Install deps
        working-directory: src/inventory-web
        run: npm ci
      - name: Build web
        working-directory: src/inventory-web
        run: npm run build
      - name: Install Playwright (with deps)
        working-directory: src/inventory-web
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        working-directory: src/inventory-web
        run: npx playwright test

  deploy:
    runs-on: [self-hosted, Linux, X64, tsf, docker]
    needs: [backend, frontend]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Configure Git
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      - name: Force-update deploy branch to this commit
        run: |
          git push origin HEAD:refs/heads/deploy --force
          echo "Branch 'deploy' is now at $GITHUB_SHA"

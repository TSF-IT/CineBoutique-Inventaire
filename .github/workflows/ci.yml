name: ci

on:
  push:
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  build-and-test:
    runs-on: [self-hosted, tsf, Linux, X64]
    permissions:
      contents: read
      checks: write

    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
          cache: true

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build -c Release --no-restore

      - name: Test (.NET) -> TRX
        run: |
          rm -rf test-results/dotnet
          mkdir -p test-results/dotnet
          dotnet test -c Release --no-build \
            --logger "trx;LogFileName=tests.trx" \
            --results-directory "$GITHUB_WORKSPACE/test-results/dotnet"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: src/inventory-web/package-lock.json

      - name: Install web dependencies
        working-directory: src/inventory-web
        run: npm ci

      - name: Run web tests (+ coverage)
        working-directory: src/inventory-web
        run: |
          # Jest : --ci --coverage ; Vitest : --coverage ; Playwright : n/a
          npm test -- --runInBand --ci --coverage || npm test -- --runInBand || true
          # copie la coverage (si produite) vers un emplacement stable
          if [ -d coverage ]; then
            mkdir -p "$GITHUB_WORKSPACE/test-results/web"
            cp -R coverage "$GITHUB_WORKSPACE/test-results/web/"
          fi

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-test-results
          path: |
            test-results/dotnet/**/*.trx
            test-results/web/**

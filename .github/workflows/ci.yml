name: CI & Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Ensure Docker is running
        run: docker info
      - name: Restore
        run: dotnet restore CineBoutique.Inventory.sln
      - name: Build
        run: dotnet build CineBoutique.Inventory.sln --configuration Release --no-restore
      - name: Test (API + Domain) with Testcontainers
        env:
          ASPNETCORE_ENVIRONMENT: "CI"
          DISABLE_SERILOG: "true"
          DISABLE_MIGRATIONS: "true"
        run: dotnet test CineBoutique.Inventory.sln --configuration Release --no-build --logger "trx;LogFileName=test-results.trx"

  frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src/inventory-web
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'src/inventory-web/package-lock.json'
      - run: npm ci
      - run: npm run lint --if-present
      - run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: [backend, frontend]   # ← attend que backend & frontend soient OK
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Tag commit for deployment
        run: |
          echo "✅ Tests OK → prêt pour déploiement"
          # Ici on pourrait créer un tag ou pousser vers une branche spéciale "deploy"
          # et la VM ne tirerait que cette branche/tag

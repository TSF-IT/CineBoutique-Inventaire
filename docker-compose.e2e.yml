services:
  db:
    image: postgres:16-alpine
    container_name: inventory-db-e2e
    ports:
      - "55432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: inventory
    volumes:
      - dbdata-e2e:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d inventory || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: .
      dockerfile: src/inventory-api/Dockerfile
    container_name: inventory-api-e2e
    user: "${HOST_UID:-1000}:${HOST_GID:-1000}"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://0.0.0.0:${PORT:-8080}
      - "ASPNETCORE_URLS=http://+:8080"
      - ASPNETCORE_DETAILEDERRORS=true
      - "ConnectionStrings__Default=Host=inventory-db-e2e;Port=5432;Database=inventory;Username=postgres;Password=postgres;Include Error Detail=true"
      - APPLY_MIGRATIONS=true
      - DISABLE_MIGRATIONS=false
      - AppSettings__SeedOnStartup=true
      - DISABLE_SERILOG=false
      - "PUBLIC_HOST=${PUBLIC_HOST:-localhost}"
      # (garde tes variables existantes)
      - DOTNET_DbgEnableMiniDump=1
      - DOTNET_DbgMiniDumpType=4           # mini dump with heap
      - DOTNET_DbgMiniDumpName=/dumps/cineboutique-api-%e-%p.dmp
      - COMPlus_ReadyToRun=0               # neutralise R2R : évite quelques crashs JIT/R2R en CI
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1  # évite dépendances ICU
    ports:
      - "8080:8080"
    volumes:
      - ./_ci_dumps:/dumps
    ulimits:
      core: -1
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: "on-failure:2"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:${PORT:-8080}/ready || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 30
      start_period: 45s

  web:
    build:
      context: ./src/inventory-web
      dockerfile: Dockerfile
    container_name: inventory-web-e2e
    depends_on:
      api:
        condition: service_healthy
    environment:
      PUBLIC_HOST: ${PUBLIC_HOST:-localhost}
    ports:
      - "80:80"
      - "443:443"

volumes:
  dbdata-e2e:

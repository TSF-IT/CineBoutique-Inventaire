services:
  db:
    image: postgres:16-alpine
    container_name: inventory-db-e2e
    ports:
      - "55432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: inventory
    volumes:
      - dbdata-e2e:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d inventory || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: .
      dockerfile: src/inventory-api/Dockerfile
    container_name: inventory-api-e2e
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_DETAILEDERRORS=true
      - "ConnectionStrings__Default=Host=db;Port=5432;Database=inventory;Username=postgres;Password=postgres;Include Error Detail=true"
      - APPLY_MIGRATIONS=true
      - DISABLE_MIGRATIONS=false
      - AppSettings__SeedOnStartup=true
      - DISABLE_SERILOG=false
      - "PUBLIC_HOST=${PUBLIC_HOST:-localhost}"
    ports:
      - "8080:8080"

  web:
    build:
      context: ./src/inventory-web
      dockerfile: Dockerfile
    container_name: inventory-web-e2e
    depends_on:
      api:
        condition: service_healthy
    environment:
      PUBLIC_HOST: ${PUBLIC_HOST:-localhost}
    ports:
      - "80:80"
      - "443:443"

volumes:
  dbdata-e2e:

services:
  db:
    image: postgres:16-alpine
    container_name: inventory-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: inventory
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d inventory || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build:
      context: .
      dockerfile: src/inventory-api/Dockerfile
    container_name: inventory-api
    depends_on:
      db:
        condition: service_healthy
    environment:
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__Default: Host=db;Port=5432;Database=inventory;Username=postgres;Password=postgres
    expose:
      - "8080"

  web:
    build:
      context: ./src/inventory-web        # <<< ICI : context pointant sur le dossier web
      dockerfile: Dockerfile              # <<< Dockerfile Ã  la racine de ce dossier
    container_name: inventory-web
    depends_on:
      - api
    environment:
      PUBLIC_HOST: ${PUBLIC_HOST}
    ports:
      - "80:80"
      - "443:443"

volumes:
  dbdata:

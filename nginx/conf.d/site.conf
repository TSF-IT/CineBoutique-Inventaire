server {
  listen 80;
  listen [::]:80;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;
  http2 on;
  server_name _;

  ssl_certificate     /etc/nginx/certs/fullchain.pem;
  ssl_certificate_key /etc/nginx/certs/privkey.pem;

  # ---- API : pass-through exact de l'URI reçue ----
  location ^~ /api/ {
    proxy_http_version 1.1;
    proxy_set_header   Connection close;
    # → on passe par l’API exposée sur l’hôte
    proxy_pass http://host.docker.internal:8080$request_uri;
  }

  # ---- Hotfix ciblé : route /api/shops ----
  location = /api/shops {
    proxy_pass         http://api:8080/api/shops;
    proxy_http_version 1.1;
    proxy_set_header   Connection close;
    proxy_set_header   Host api:8080;
  }

  location = /api/shops/ {
    proxy_pass         http://api:8080/api/shops/;
    proxy_http_version 1.1;
    proxy_set_header   Connection close;
    proxy_set_header   Host api:8080;
  }

  # ---- Swagger : proxifié vers l’API (sinon la SPA répond) ----
  location = /swagger { return 302 /swagger/index.html; }
  location ^~ /swagger/ {
    proxy_http_version 1.1;
    proxy_set_header   Connection close;
    proxy_pass http://host.docker.internal:8080/swagger/;
  }

  # ---- SPA front ----
  root /usr/share/nginx/html;
  index index.html;
  location / { try_files $uri /index.html; }

  # ---- Health Nginx ----
  location = /health { return 200 'ok'; add_header Content-Type text/plain; }
}

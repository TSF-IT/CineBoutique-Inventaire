server {
  listen 80;
  listen [::]:80;

  # Health HTTP (pour healthcheck Docker)
  location = /health { return 200 'ok'; add_header Content-Type text/plain; }

  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl;
  listen [::]:443 ssl;
  http2 on;
  server_name _;

  ssl_certificate     /etc/nginx/certs/fullchain.pem;
  ssl_certificate_key /etc/nginx/certs/privkey.pem;

  gzip on;
  gzip_types text/css application/javascript application/json image/svg+xml application/manifest+json;
  gzip_min_length 1024;

  # PWA : no-store sur HTML/SW/manifest
  location = /index.html           { add_header Cache-Control "no-store, no-cache, must-revalidate" always; }
  location = /sw.js                { add_header Cache-Control "no-store" always; }
  location = /manifest.webmanifest { add_header Cache-Control "no-store" always; }

  # Assets fingerprintés : cache long
  location ~* \.(js|css|woff2|png|jpg|jpeg|gif|svg)$ {
    add_header Cache-Control "public, max-age=31536000, immutable" always;
  }

  # API : un seul bloc /api/ (pas d'include)
  location ^~ /api/ {
    proxy_http_version 1.1;
    proxy_set_header   Connection "";
    add_header Cache-Control "no-store" always;
    proxy_pass http://host.docker.internal:8080$request_uri;  # blue par défaut
  }

  # Swagger proxifié vers l'API
  location = /swagger { return 302 /swagger/index.html; }
  location ^~ /swagger/ {
    proxy_http_version 1.1;
    proxy_set_header   Connection "";
    proxy_pass http://host.docker.internal:8080/swagger/;
  }

  # SPA
  root /usr/share/nginx/html;
  index index.html;
  location / { try_files $uri /index.html; }

  # Health HTTPS
  location = /health { return 200 'ok'; add_header Content-Type text/plain; }
}

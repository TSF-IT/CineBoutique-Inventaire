name: CI

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cineboutique_test
        options: >-
          --health-cmd="pg_isready -U postgres -d cineboutique_test"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      # Mets l’app en mode CI
      ASPNETCORE_ENVIRONMENT: CI
      # Connexion DB (au cas où les tests d’intégration en ont besoin)
      ConnectionStrings__Default: Host=localhost;Port=5432;Database=cineboutique_test;Username=postgres;Password=postgres;Include Error Detail=true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj', '**/Directory.Packages.props') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore CineBoutique.Inventory.sln

      - name: Build
        run: dotnet build CineBoutique.Inventory.sln --configuration Release --no-restore

      # Optionnel: appliquer les migrations si tes tests d’intégration en ont besoin
      # - name: Wait for Postgres
      #   run: |
      #     for i in {1..30}; do
      #       if pg_isready -h 127.0.0.1 -p 5432 -U postgres; then echo "Postgres is ready"; exit 0; fi
      #       echo "Waiting for Postgres..."; sleep 2
      #     done
      #     exit 1

      - name: Test
        run: dotnet test CineBoutique.Inventory.sln --configuration Release --no-build --logger "trx;LogFileName=test_results.trx"

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: "**/TestResults/*.trx"
